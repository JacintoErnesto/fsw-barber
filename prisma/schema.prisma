generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  bookigs   Bookig[]
  reviews   Review[]
}

model Barbershop {
  id          String              @id @default(uuid())
  name        String
  address     String
  phones      String[]
  description String
  imageUrl    String
  createdAt   DateTime            @default(now())
  updatedAt   DateTime?
  services    BarbershopService[]
}

model BarbershopService {
  id           String     @id @default(uuid())
  name         String
  description  String
  imageUrl     String
  price        Decimal    @db.Decimal(10, 2)
  barbershopId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?
  barbershop   Barbershop @relation(fields: [barbershopId], references: [id])
  bookigs      Bookig[]
  reviews      Review[]
}

model Bookig {
  id                String            @id @default(uuid())
  userId            String
  serviceId         String
  date              DateTime
  createdAt         DateTime          @default(now())
  updated           DateTime?
  user              Users             @relation(fields: [userId], references: [id])
  barbershopService BarbershopService @relation(fields: [serviceId], references: [id])
}

model Review {
  id                String            @id @default(uuid())
  serviceId         String
  userId            String
  rating            Int
  user              Users             @relation(fields: [userId], references: [id])
  barbershopService BarbershopService @relation(fields: [serviceId], references: [id])
  feedback          String
  createdAt         DateTime          @default(now())
  updated           DateTime?
}
